{"ast":null,"code":"let initialState = {\n  input: '',\n  previousNumber: '',\n  currentNumber: '',\n  operator: ''\n};\n\nconst calculator = (state = initialState, action) => {\n  console.log('------------------------------------');\n  console.log(action);\n  console.log('------------------------------------');\n\n  switch (action.type) {\n    case 'ADD_TO_INPUT':\n      return Object.assign({}, state, {\n        input: state.input + action.val\n      });\n\n    case 'CLEAR_INPUT':\n      return Object.assign({}, state, {\n        input: ''\n      });\n\n    case 'ADD':\n      return Object.assign({}, state, {\n        previousNumber: state.input,\n        input: '',\n        operator: 'plus'\n      });\n\n    case 'EQUAL':\n      switch (state.operator) {\n        case 'plus':\n          console.log(state);\n          return Object.assign({}, state, {\n            currentNumber: state.input,\n            input: parseInt(state.previousNumber) + parseInt(state.currentNumber)\n          });\n\n        default:\n          break;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default calculator;","map":{"version":3,"sources":["/home/mira/Documents/Projects/calculator/src/reducers/simpleReducer.js"],"names":["initialState","input","previousNumber","currentNumber","operator","calculator","state","action","console","log","type","Object","assign","val","parseInt"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,aAAa,EAAE,EAHE;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAAnB;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;;AACE,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,cAAL;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAACL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACM;AAA7B,OAAzB,CAAP;;AACF,SAAK,aAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAACL,QAAAA,KAAK,EAAE;AAAR,OAAzB,CAAP;;AACF,SAAK,KAAL;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,QAAAA,cAAc,EAAEI,KAAK,CAACL,KADQ;AAE9BA,QAAAA,KAAK,EAAE,EAFuB;AAG9BG,QAAAA,QAAQ,EAAE;AAHoB,OAAzB,CAAP;;AAKF,SAAK,OAAL;AACE,cAAQE,KAAK,CAACF,QAAd;AACE,aAAK,MAAL;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACE,iBAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BH,YAAAA,aAAa,EAAEG,KAAK,CAACL,KADS;AAE9BA,YAAAA,KAAK,EAAEa,QAAQ,CAACR,KAAK,CAACJ,cAAP,CAAR,GAAiCY,QAAQ,CAACR,KAAK,CAACH,aAAP;AAFlB,WAAzB,CAAP;;AAIF;AACE;AARJ;;AAWF;AACE,aAAOG,KAAP;AAxBJ;AA0BD,CA9BH;;AAgCE,eAAeD,UAAf","sourcesContent":["let initialState = {\n  input: '',\n  previousNumber: '',\n  currentNumber: '',\n  operator: ''\n}\n\nconst calculator = (state = initialState, action) => {\n  console.log('------------------------------------');\n  console.log(action);\n  console.log('------------------------------------');\n    switch (action.type) {\n      case 'ADD_TO_INPUT':\n        return Object.assign({}, state, {input: state.input + action.val})\n      case 'CLEAR_INPUT':\n        return Object.assign({}, state, {input: ''})\n      case 'ADD':\n        return Object.assign({}, state, {\n          previousNumber: state.input,\n          input: '',\n          operator: 'plus'\n        })\n      case 'EQUAL':\n        switch (state.operator) {\n          case 'plus':\n          console.log(state)\n            return Object.assign({}, state, {\n              currentNumber: state.input,\n              input: parseInt(state.previousNumber) + parseInt(state.currentNumber)\n            })\n          default:\n            break;\n        }\n        \n      default:\n        return state\n    }\n  }\n  \n  export default calculator"]},"metadata":{},"sourceType":"module"}