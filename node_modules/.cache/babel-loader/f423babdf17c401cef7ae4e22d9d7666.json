{"ast":null,"code":"let initialState = {\n  input: '',\n  previousNumber: '',\n  operator: ''\n};\n\nconst calculator = (state = initialState, action) => {\n  console.log('------------------------------------');\n  console.log(action);\n  console.log('------------------------------------');\n\n  switch (action.type) {\n    case 'ADD_TO_INPUT':\n      return Object.assign({}, state, {\n        input: state.input + action.val\n      });\n\n    case 'CLEAR_INPUT':\n      return Object.assign({}, state, {\n        input: ''\n      });\n\n    case 'ADD':\n      return Object.assign({}, state, {\n        previousNumber: state.input,\n        input: '',\n        operator: 'plus'\n      });\n\n    case 'EQUAL':\n      switch (state.operator) {\n        case 'plus':\n          return Object.assign({}, state, {\n            input: parseInt(state.previousNumber) + parseInt(state.input)\n          });\n\n        case 'minus':\n          return Object.assign({}, state, {\n            input: parseInt(state.previousNumber) - parseInt(state.input)\n          });\n\n        case 'multiplication':\n          return Object.assign({}, state, {\n            input: parseInt(state.previousNumber) * parseInt(state.input)\n          });\n\n        case 'division':\n          return Object.assign({}, state, {\n            input: parseInt(state.previousNumber) / parseInt(state.input)\n          });\n\n        default:\n          break;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default calculator;","map":{"version":3,"sources":["/home/mira/Documents/Projects/calculator/src/reducers/simpleReducer.js"],"names":["initialState","input","previousNumber","operator","calculator","state","action","console","log","type","Object","assign","val","parseInt"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAAnB;;AAMA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;;AACE,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,cAAL;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAACJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACM;AAA7B,OAAzB,CAAP;;AACF,SAAK,aAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAACJ,QAAAA,KAAK,EAAE;AAAR,OAAzB,CAAP;;AACF,SAAK,KAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BH,QAAAA,cAAc,EAAEG,KAAK,CAACJ,KADQ;AAE9BA,QAAAA,KAAK,EAAE,EAFuB;AAG9BE,QAAAA,QAAQ,EAAE;AAHoB,OAAzB,CAAP;;AAKF,SAAK,OAAL;AACE,cAAQE,KAAK,CAACF,QAAd;AACE,aAAK,MAAL;AACE,iBAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,YAAAA,KAAK,EAAEY,QAAQ,CAACR,KAAK,CAACH,cAAP,CAAR,GAAiCW,QAAQ,CAACR,KAAK,CAACJ,KAAP;AADlB,WAAzB,CAAP;;AAGF,aAAK,OAAL;AACE,iBAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,YAAAA,KAAK,EAAEY,QAAQ,CAACR,KAAK,CAACH,cAAP,CAAR,GAAiCW,QAAQ,CAACR,KAAK,CAACJ,KAAP;AADlB,WAAzB,CAAP;;AAGF,aAAK,gBAAL;AACE,iBAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,YAAAA,KAAK,EAAEY,QAAQ,CAACR,KAAK,CAACH,cAAP,CAAR,GAAiCW,QAAQ,CAACR,KAAK,CAACJ,KAAP;AADlB,WAAzB,CAAP;;AAGF,aAAK,UAAL;AACE,iBAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,YAAAA,KAAK,EAAEY,QAAQ,CAACR,KAAK,CAACH,cAAP,CAAR,GAAiCW,QAAQ,CAACR,KAAK,CAACJ,KAAP;AADlB,WAAzB,CAAP;;AAGF;AACE;AAlBJ;;AAqBF;AACE,aAAOI,KAAP;AAlCJ;AAoCD,CAxCH;;AA0CE,eAAeD,UAAf","sourcesContent":["let initialState = {\n  input: '',\n  previousNumber: '',\n  operator: ''\n}\n\nconst calculator = (state = initialState, action) => {\n  console.log('------------------------------------');\n  console.log(action);\n  console.log('------------------------------------');\n    switch (action.type) {\n      case 'ADD_TO_INPUT':\n        return Object.assign({}, state, {input: state.input + action.val})\n      case 'CLEAR_INPUT':\n        return Object.assign({}, state, {input: ''})\n      case 'ADD':\n        return Object.assign({}, state, {\n          previousNumber: state.input,\n          input: '',\n          operator: 'plus'\n        })\n      case 'EQUAL':\n        switch (state.operator) {\n          case 'plus':\n            return Object.assign({}, state, {\n              input: parseInt(state.previousNumber) + parseInt(state.input)\n            })\n          case 'minus':\n            return Object.assign({}, state, {\n              input: parseInt(state.previousNumber) - parseInt(state.input)\n            })\n          case 'multiplication':\n            return Object.assign({}, state, {\n              input: parseInt(state.previousNumber) * parseInt(state.input)\n            })\n          case 'division':\n            return Object.assign({}, state, {\n              input: parseInt(state.previousNumber) / parseInt(state.input)\n            })\n          default:\n            break;\n        }\n        \n      default:\n        return state\n    }\n  }\n  \n  export default calculator"]},"metadata":{},"sourceType":"module"}